Team JEA: Jacob Kirmayer, Ethan Lam, Ariella Katz, Jacob Jr., Carl, Tom
APCS
HW63: Read/Review/Expand
2022-02-10
time spent: 0.5 hrs

ANSWERS:
Activity 1:
  1a. public static double sentimentVal( String word )
  1b. It requires a String parameter. Passing any other parameter throws an error.
  1c. The method returns a double.
  2. sentimentVal("administration"); -> -0.02
     sentimentVal("americans"); -> -0.94
     sentimentVal("computer"); -> 0.15
  3a. It is compilable. A String is passed through sentimentVal() and num
      matches the returntype (double).
  3b. It is not compilable. A double is passed through sentimentVal() instead of
      a String and the returntype is a double, not a String.
  3c. It is not compilable. sentimentVal() only accepts one argument.
Activity 2:
  4. We convert the text in the file into one long String, and then use the
     String.split() method to split that string into an array of words,
     separated by spaces. We then use a specialized for loop to iterate through
     that array, and for each word, getting rid of any punctuation and adding
     its sentiment value to the running total sentiment value. After the entire
     array has been traversed, the total sentiment value is returned.
  5a. The rating does not make sense. For example, our SimpleReview rating was
      very positive, but it only earned 3 stars. Although the overall review had
      an overwhelmingly positive sentiment, the individual words tended towards
      more negative sentiments, resulting in a deceptively low sentiment value.
  5b. We could look for places where the numbers 1, 2, 3, 4, or 5 are used, and
      if they're followed by "stars", use that for the rating.
      We could use the word "not" to negate the sentiment value of the word
      following it.
  6.  All reviews with ratings below 15 will earn ratings of 4, and all reviews
      with ratings above or equal to 15 will earn ratings of 0. This is because
      any totalSentiment less than 0 will also be less than 5, any less than 5
      will also be less than 10, and any less than 10 will also be less than 15,
      so all of these will work for the first if statement. They might fix their
      code by reversing the order of the if statements (< 0, then < 5, then
      < 10, etc.).
Activity 3:
  3. indexOf(String) returns the index of the first occurrence of a character or
     sequence of characters in a String. substring(int, int) returns the
     section of the string from the first index to the second, including the first
     but excluding the second. This exclusion makes it necessary to add 1 to the
     second int that is passed through the method.
  5. non-static methods can only be called from an instance of a class.
  6. Fake positive or fake negative reviews could use the same process to replace
     adjectives, except positive reviews would only use positive adjectives and
     negative reviews would only use negative adjectives.
Activity 4:
  1. If you're autogenerating positive reviews, you would want to autogenerate
     negative reviews as well to avoid drawing suspicion to the positive ones.
  2. Autogenerating positive reviews makes your product/service sound more
     desirable and increases customers.
  3. 0) Traverse the review until you come accross a *, signifying an adjective.
     1) Replace the word following the adjective (everything from * to the space,
     including the * but excluding the space) with a random adjective that has a
     positive sentiment.
     2) Repeat until the entire review is traversed without finding a *, meaning
     there are no adjectives left.
  5. It removes the first character of oneWord.
  6. If a search of the cleanSentiment.csv file is done for any word beginning
     with a *, the word won't be found because none of the words in the file have
     punctuation.
  7. It could select only adjectives with sentiments above a threshold value.

NOTES:
* What is the static {...} section at the beginning of the class?
* How might we be able to use context clues to improve totalSentiment?
  For example, using the word "not" might automatically negate the sentiment
  of the following word.
* In Activities 3 and 4, rather than wasting our time copying all of the
  adjectives into their respective files, we made very short lists of adjectives.
